"""bootstrap schema

Revision ID: 9ce9546fa7c9
Revises: 7cfa47ee640c
Create Date: 2025-08-25 17:31:35.766245

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9ce9546fa7c9'
down_revision: Union[str, Sequence[str], None] = '7cfa47ee640c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('delivery_address_snapshot', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('delivery_address_id', sa.UUID(), nullable=True),
    sa.Column('items_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('delivery_fee', sa.Numeric(precision=10, scale=2), server_default='0', nullable=False),
    sa.Column('discount_total', sa.Numeric(precision=10, scale=2), server_default='0', nullable=False),
    sa.Column('grand_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PLACED', 'PAID', 'SHIPPED', 'DELIVERED', 'CANCELLED', 'RETURNED', name='orderstatus'), server_default='PLACED', nullable=False),
    sa.Column('payment_method', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('shipped_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('delivery_fee >= 0', name='orders_delivery_fee_nonneg'),
    sa.CheckConstraint('discount_total >= 0', name='orders_discount_total_nonneg'),
    sa.CheckConstraint('grand_total >= 0', name='orders_grand_total_nonneg'),
    sa.CheckConstraint('items_total >= 0', name='orders_items_total_nonneg'),
    sa.ForeignKeyConstraint(['delivery_address_id'], ['addresses.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_orders_delivery_address_id'), ['delivery_address_id'], unique=False)
        batch_op.create_index('ix_orders_status_created', ['status', 'created_at'], unique=False)
        batch_op.create_index('ix_orders_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_user_id'), ['user_id'], unique=False)

    op.create_table('order_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=True),
    sa.Column('sku_snapshot', sa.String(), nullable=False),
    sa.Column('name_snapshot', sa.String(length=255), nullable=False),
    sa.Column('image_url_snapshot', sa.Text(), nullable=True),
    sa.Column('unit_price_snapshot', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('qty', sa.Integer(), server_default='1', nullable=False),
    sa.Column('line_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('line_total >= 0', name='order_items_total_nonneg'),
    sa.CheckConstraint('qty > 0', name='order_items_qty_positive'),
    sa.CheckConstraint('unit_price_snapshot >= 0', name='order_items_price_nonneg'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_order_items_order_id'), ['order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_order_items_product_id'), ['product_id'], unique=False)

    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
        batch_op.create_index(batch_op.f('ix_addresses_user_id'), ['user_id'], unique=False)
        batch_op.drop_constraint(batch_op.f('addresses_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sku', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
        batch_op.create_index(batch_op.f('ix_products_sku'), ['sku'], unique=True)

    with op.batch_alter_table('refresh_tokens', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
        batch_op.drop_constraint(batch_op.f('refresh_tokens_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('refresh_tokens', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('refresh_tokens_user_id_fkey'), 'users', ['user_id'], ['id'])
        batch_op.drop_column('created_at')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_sku'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('is_active')
        batch_op.drop_column('sku')

    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('addresses_user_id_fkey'), 'users', ['user_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_addresses_user_id'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_order_items_product_id'))
        batch_op.drop_index(batch_op.f('ix_order_items_order_id'))

    op.drop_table('order_items')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orders_user_id'))
        batch_op.drop_index('ix_orders_user_created')
        batch_op.drop_index('ix_orders_status_created')
        batch_op.drop_index(batch_op.f('ix_orders_delivery_address_id'))

    op.drop_table('orders')
    # ### end Alembic commands ###
